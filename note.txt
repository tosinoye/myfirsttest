oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git init
Reinitialized existing Git repository in C:/Users/oyela/Documents/Git & GitHub Practise/myapp/.git/

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git config --global user.name 'Tosin Oyelakin'

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git config --global user.email 'ooyelakin@certifiedtechnologies.com'

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add index.html

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        app.js


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git rm --cached index.html
rm 'index.html'

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        app.js
        index.html

nothing added to commit but untracked files present (use "git add" to track)

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git.status
bash: git.status: command not found

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        app.js
        index.html

nothing added to commit but untracked files present (use "git add" to track)

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   app.js
        new file:   index.html


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   app.js
        new file:   index.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   index.html


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   app.js
        new file:   index.html


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git commit
[master (root-commit) e7ea036]  Initial commit
 2 files changed, 9 insertions(+)
 create mode 100644 app.js
 create mode 100644 index.html

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
nothing to commit, working tree clean

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   app.js

no changes added to commit (use "git add" and/or "git commit -a")

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   app.js


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   app.js


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git commit -m 'changed app.js'
[master 38fdb63] changed app.js
 1 file changed, 1 insertion(+)

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ touch .gitignore

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ touch log.txt

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   .gitignore


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ touch dir1

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ rm --catched dir1
rm: unknown option -- catched
Try 'rm --help' for more information.

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        dir1


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   .gitignore


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ touch dir1\app1.js

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   .gitignore
        new file:   dir1/app1.js


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git branch login

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   .gitignore
        new file:   dir1/app1.js


oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git commit -m 'another change'
[master 4cb5bea] another change
 2 files changed, 3 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 dir1/app1.js

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git checkout login
Switched to branch 'login'

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (login)
$ touch login.html

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (login)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (login)
$ git commit -m 'login form'
[login eb52a94] login form
 4 files changed, 4 insertions(+)
 create mode 100644 dir2/app2.js
 create mode 100644 log.txt
 create mode 100644 login.html

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (login)
$ git checkout master
Switched to branch 'master'

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git merge login
Merge made by the 'recursive' strategy.
 dir2/app2.js | 1 +
 index.html   | 1 +
 log.txt      | 1 +
 login.html   | 1 +
 4 files changed, 4 insertions(+)
 create mode 100644 dir2/app2.js
 create mode 100644 log.txt
 create mode 100644 login.html

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git remote

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git remote add origin https://github.com/tosinoye/myfirsttest.git

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git remote
origin

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git push -u origin master
Enumerating objects: 20, done.
Counting objects: 100% (20/20), done.
Delta compression using up to 8 threads
Compressing objects: 100% (12/12), done.
Writing objects: 100% (20/20), 1.54 KiB | 315.00 KiB/s, done.
Total 20 (delta 5), reused 0 (delta 0)
remote: Resolving deltas: 100% (5/5), done.
To https://github.com/tosinoye/myfirsttest.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ touch README.md

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ get add .
bash: get: command not found

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git commit -m 'Added readme'
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
        README.md

nothing added to commit but untracked files present

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git add .

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git commit -m 'Added readme'
[master b176667] Added readme
 1 file changed, 2 insertions(+)
 create mode 100644 README.md

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 311 bytes | 311.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/tosinoye/myfirsttest.git
   d2569d3..b176667  master -> master

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
$ git pull
Already up to date.

oyela@Presidenttosin MINGW64 ~/Documents/Git & GitHub Practise/myapp (master)
